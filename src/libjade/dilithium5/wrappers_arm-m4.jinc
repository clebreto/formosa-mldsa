/*************************************************
*
* Description: Provide wrappers around functions that have
*              architecture specific implementations
*
* Version : ARM-V7m
*
**************************************************/

/* ********************************************************************** */
/* Helper functions to facilitate architecture modularity                 */

inline fn __ubfx(reg u32 in, inline int pos, inline int width) -> reg u32 {
  in = #UBFX(in, width, pos);
  return in;
}

inline fn __smull(reg u32 in_1, reg u32 in_2, reg u32 out_low, reg u32 out_high) -> reg u32, reg u32{
  out_high, out_low = #SMULL(in_1, in_2);
  return out_low, out_high;
}

/**
 Operates the subtraction of the @nb_bits logical left shift on @in_2 with @in_1.
 Writes the result in @in_1.
**/
inline fn __rsb_lsl_inplace(reg u32 in_1, reg u32 in_2, inline int nb_bits) -> reg u32 {
  in_2 = #RSB(in_1, in_2 << nb_bits);
  return in_2;
}

/**
 Operates the subtraction of the @nb_bits logical left shift on @in_2 with @in_1.
 Writes the result in @out.
**/
inline fn __rsb_lsl(reg u32 in_1, reg u32 in_2, inline int nb_bits, reg u32 out) -> reg u32 {
  out = #RSB(in_1, in_2 << nb_bits);
  return out;
}
